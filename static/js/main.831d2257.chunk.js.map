{"version":3,"sources":["components/Hotspot/Hotspot.tsx","components/ImageDropzoneUploader/ImageDropzoneUploader.tsx","contexts/ColorThemeProvider/ColorThemeProvider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Hotspot","styled","Paper","shouldForwardProp","prop","size","left","top","theme","RippleAnimation","keyframes","alpha","hexToRgb","palette","primary","main","backgroundColor","borderRadius","padding","position","animation","ImageDropzoneUploaderRoot","spacing","ImageDropzoneUploaderDropzone","active","border","divider","transition","transitions","create","minHeight","justifyContent","alignItems","display","ImageDropzoneUploaderButton","Button","marginTop","ImageDropzoneUploader","React","forwardRef","ref","inputProps","onOpen","other","type","hidden","textAlign","ImageOutlined","color","fontSize","Typography","gutterBottom","variant","onClick","ColorModeContext","createContext","mode","toggleColorMode","ColorThemeProvider","children","useState","useMediaQuery","setMode","useCallback","prevMode","useMemo","createTheme","secondary","typography","fontFamily","join","components","MuiCssBaseline","styleOverrides","msScrollbarFaceColor","grey","msScrollbarShadowColor","msScrollbarDarkshadowColor","msScrollbarTrackColor","msScrollbarArrowColor","scrollbarColor","scrollbarWidth","width","height","getDesignTokens","context","Provider","value","ThemeProvider","AppBar","useContext","Toolbar","sx","Stack","direction","Tooltip","title","IconButton","Brightness4","Brightness7","href","process","target","rel","GitHub","PositionTable","activeImageID","positions","onCodeOpen","onDeleteAll","onSwitchChange","onInputChange","onDelete","isTabletBelow","breakpoints","down","TableContainer","component","borderTop","borderLeft","maxHeight","undefined","Table","stickyHeader","TableHead","TableRow","TableCell","Code","align","InputLabel","Delete","TableBody","Object","entries","map","imageID","hover","Switch","checked","onChange","InputBase","fullWidth","min","max","step","style","name","placeholder","e","DeleteAllDialog","open","onClose","onConfirm","Dialog","DialogTitle","DialogContent","dividers","DialogActions","CopySnackbar","Snackbar","autoHideDuration","reason","Alert","ContentSection","Box","my","fontWeight","Footer","p","ImageCanvasPreviewImg","maxWidth","cursor","ImageCanvasWrapper","ImageCanvasCaptionWrapper","EmptyImageCanvasRoot","EmptyImageCanvas","ImageStack","images","overflow","image","Card","file","flex","id","CardActionArea","CardMedia","imgSrc","alt","CardContent","whiteSpace","textOverflow","Add","CodeDialogPre","pxToRem","margin","App","setImages","setPositions","setActiveImageID","codeDialog","copySnackbar","deleteDialog","setOpen","updateOpen","newOpen","prevOpen","useBeforeunload","length","preventDefault","onImagesUpload","acceptedFiles","uuidv4","URL","createObjectURL","prevImages","reduce","res","prevPositions","useDropzone","accept","onDrop","noClick","openUpload","getRootProps","getInputProps","isDragActive","handlePreviousImage","currentImgIndex","findIndex","handleNextImage","isFirstImage","isLastImage","activeImage","find","CssBaseline","enableColorScheme","scroll","defaultProps","code","JSON","stringify","values","language","className","tokens","getLineProps","getTokenProps","line","i","key","token","window","navigator","clipboard","writeText","Container","Grid","container","item","xs","md","onMouseDown","rect","getBoundingClientRect","x","clientX","y","clientY","toFixed","handlePlotHotspot","src","Divider","disabled","ChevronLeft","mx","ChevronRight","renderImageCanvas","Number","newImages","idx","splice","newPositions","handleDeleteImage","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.831d2257.chunk.js","sourcesContent":["import { keyframes } from '@emotion/react';\nimport { Paper } from '@mui/material';\nimport { alpha, hexToRgb, styled } from '@mui/material/styles';\n\nexport interface HotspotProps {\n  left?: number;\n  top?: number;\n  size: number;\n}\n\nconst Hotspot = styled(Paper, {\n  shouldForwardProp: (prop) =>\n    prop !== 'size' && prop !== 'left' && prop !== 'top',\n})<HotspotProps>(({ size, left, top, theme }) => {\n  const RippleAnimation = keyframes`\n    0% {\n      box-shadow: 0 0 0 0 ${alpha(hexToRgb(theme.palette.primary.main), 0.2)};\n    }\n    100% {\n      box-shadow: 0 0 0 1.5rem rgba(0, 0, 0, 0);\n    }\n  `;\n  return {\n    backgroundColor: theme.palette.primary.main,\n    borderRadius: '100%',\n    padding: size,\n    position: 'absolute',\n    animation: `${RippleAnimation} 1.25s linear infinite`,\n    ...(left && { left: `${left}%` }),\n    ...(top && { top: `${top}%` }),\n  };\n});\n\nexport default Hotspot;\n","import React from 'react';\n\nimport { ImageOutlined as ImageOutlinedIcon } from '@mui/icons-material';\nimport { Box, Button, ButtonProps, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nexport interface ImageDropzoneUploaderProps {\n  inputProps: React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >;\n  active?: boolean;\n  onOpen?: ButtonProps['onClick'];\n}\n\nconst ImageDropzoneUploaderRoot = styled('div')(({ theme }) => ({\n  padding: theme.spacing(2),\n}));\n\ninterface ImageDropzoneUploaderDropzoneProps {\n  active?: boolean;\n}\n\nconst ImageDropzoneUploaderDropzone = styled('div', {\n  shouldForwardProp: (prop) => prop !== 'active',\n})<ImageDropzoneUploaderDropzoneProps>(({ active, theme }) => ({\n  borderRadius: 1,\n  border: active\n    ? `1.75px dotted ${theme.palette.primary.main}`\n    : `1px dotted ${theme.palette.divider}`,\n  transition: theme.transitions.create('border'),\n  minHeight: 400,\n  justifyContent: 'center',\n  alignItems: 'center',\n  display: 'flex',\n}));\n\nconst ImageDropzoneUploaderButton = styled(Button)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n}));\n\nconst ImageDropzoneUploader = React.forwardRef(function ImageDropzoneUploader(\n  { active, inputProps, onOpen, ...other }: ImageDropzoneUploaderProps,\n  ref: React.Ref<HTMLDivElement>\n) {\n  return (\n    <ImageDropzoneUploaderRoot ref={ref} {...other}>\n      <input type=\"file\" hidden {...inputProps} />\n      <ImageDropzoneUploaderDropzone active={active}>\n        <Box textAlign=\"center\">\n          <ImageOutlinedIcon color=\"action\" fontSize=\"large\" />\n          <Typography gutterBottom color=\"text.secondary\" variant=\"subtitle2\">\n            Drag and drop image(s)\n          </Typography>\n          <ImageDropzoneUploaderButton\n            onClick={onOpen}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Browse\n          </ImageDropzoneUploaderButton>\n        </Box>\n      </ImageDropzoneUploaderDropzone>\n    </ImageDropzoneUploaderRoot>\n  );\n});\n\nexport default ImageDropzoneUploader;\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\n\nimport {\n  createTheme,\n  PaletteMode,\n  ThemeProvider,\n  useMediaQuery,\n} from '@mui/material';\nimport { grey } from '@mui/material/colors';\nimport { alpha } from '@mui/material/styles';\n\nexport const ColorModeContext = createContext({\n  mode: 'light',\n  toggleColorMode: () => {},\n});\n\nexport const useColorModeContext = () => useContext(ColorModeContext);\n\nexport const getDesignTokens = (mode: PaletteMode) => ({\n  palette: {\n    mode,\n    ...(mode === 'light'\n      ? {\n          primary: { main: '#007fff' },\n          secondary: { main: '#9c27b0' },\n        }\n      : {\n          primary: { main: '#5090d3' },\n          secondary: { main: '#ce93d8' },\n        }),\n  },\n  typography: {\n    fontFamily: ['Nunito Sans', 'Arial'].join(','),\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        '*': {\n          // IE\n          msScrollbarFaceColor: grey[500],\n          msScrollbarShadowColor: grey[500],\n          msScrollbarDarkshadowColor: grey[500],\n          msScrollbarTrackColor: alpha(grey[500], 0.4),\n          msScrollbarArrowColor: grey[500],\n          // FireFox\n          scrollbarColor: alpha(grey[500], 0.4),\n          scrollbarWidth: 'thin',\n          '&:hover': {\n            // IE\n            msScrollbarTrackColor: alpha(grey[500], 0.6),\n            // FireFox\n            scrollbarColor: alpha(grey[500], 0.6),\n          },\n        },\n        // Chrome\n        '*::-webkit-scrollbar': {\n          width: '0.5rem',\n          height: '0.5rem',\n        },\n        '*::-webkit-scrollbar-button': {\n          width: 0,\n          height: 0,\n        },\n        '*::-webkit-scrollbar-thumb': {\n          backgroundColor: alpha(grey[500], 0.4),\n          borderRadius: 4,\n          '&:hover': {\n            backgroundColor: alpha(grey[500], 0.6),\n          },\n        },\n        '*::-webkit-scrollbar-track': {\n          backgroundColor: 'unset',\n        },\n      },\n    },\n  },\n});\n\nconst ColorThemeProvider = ({ children }: React.PropsWithChildren<{}>) => {\n  const [mode, setMode] = useState<'light' | 'dark'>(\n    useMediaQuery('(prefers-color-scheme: dark)') ? 'dark' : 'light'\n  );\n\n  const toggleColorMode = useCallback(() => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  }, []);\n\n  const theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n\n  const context = {\n    mode,\n    toggleColorMode,\n  };\n  return (\n    <ColorModeContext.Provider value={context}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n};\n\nexport default ColorThemeProvider;\n","import '@fontsource/nunito-sans';\n\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport React, { useCallback, useState } from 'react';\nimport { useBeforeunload } from 'react-beforeunload';\nimport { useDropzone } from 'react-dropzone';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  Add as AddIcon,\n  Brightness4 as Brightness4Icon,\n  Brightness7 as Brightness7Icon,\n  ChevronLeft as ChevronLeftIcon,\n  ChevronRight as ChevronRightIcon,\n  Code as CodeIcon,\n  Delete as DeleteIcon,\n  GitHub as GitHubIcon,\n  ImageOutlined as ImageOutlinedIcon,\n} from '@mui/icons-material';\nimport {\n  Alert,\n  AppBar as MuiAppBar,\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Container,\n  CssBaseline,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton,\n  IconButtonProps,\n  InputBase,\n  InputLabel,\n  Link,\n  Paper,\n  Snackbar,\n  Stack,\n  Switch,\n  SwitchProps,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n} from '@mui/material';\nimport { styled, Theme } from '@mui/material/styles';\nimport { Box } from '@mui/system';\n\nimport { Hotspot, ImageDropzoneUploader } from './components';\nimport { ColorThemeProvider, useColorModeContext } from './contexts';\n\nconst HOTSPOT_SIZE = 6;\n\ninterface Image {\n  id: string;\n  file: File;\n  imgSrc: string;\n}\n\ninterface Position {\n  left: number;\n  top: number;\n}\n\ntype Positions = Record<string, Position>;\n\nconst AppBar = () => {\n  const { mode, toggleColorMode } = useColorModeContext();\n  return (\n    <MuiAppBar>\n      <Toolbar sx={{ justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"subtitle1\">\n          Image Sequence Hotspot Position Picker\n        </Typography>\n        <Stack spacing={1} direction=\"row\">\n          <Tooltip title={`Turn ${mode === 'light' ? 'off' : 'on'} the light`}>\n            <IconButton color=\"inherit\" onClick={toggleColorMode}>\n              {mode === 'light' ? <Brightness4Icon /> : <Brightness7Icon />}\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"GitHub repository\">\n            <IconButton\n              color=\"inherit\"\n              href={process.env.REACT_APP_GITHUB_REPOSITORY_URL as string}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n      </Toolbar>\n    </MuiAppBar>\n  );\n};\n\ninterface PositionTableProps {\n  activeImageID?: string;\n  positions: Positions;\n  onCodeOpen: IconButtonProps['onClick'];\n  onDeleteAll: IconButtonProps['onClick'];\n  onSwitchChange: SwitchProps['onChange'];\n  onInputChange: (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    imageID: string\n  ) => void;\n  onDelete: (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    imageID: string\n  ) => void;\n}\n\nconst PositionTable = ({\n  activeImageID,\n  positions,\n  onCodeOpen,\n  onDeleteAll,\n  onSwitchChange,\n  onInputChange,\n  onDelete,\n}: PositionTableProps) => {\n  const isTabletBelow = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down('md')\n  );\n\n  return (\n    <TableContainer\n      component=\"aside\"\n      sx={{\n        ...(isTabletBelow\n          ? {\n              borderTop: (theme) => `1px solid ${theme.palette.divider}`,\n            }\n          : {\n              borderLeft: (theme) => `1px solid ${theme.palette.divider}`,\n            }),\n        height: '100%',\n        maxHeight: !isTabletBelow ? 750 : undefined,\n      }}\n    >\n      <Table stickyHeader size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Tooltip title=\"JSON\">\n                <IconButton onClick={onCodeOpen}>\n                  <CodeIcon />\n                </IconButton>\n              </Tooltip>\n            </TableCell>\n            <TableCell align=\"right\">\n              <InputLabel>Left (%)</InputLabel>\n            </TableCell>\n            <TableCell align=\"right\">\n              <InputLabel>Top (%)</InputLabel>\n            </TableCell>\n            <TableCell>\n              <Tooltip title=\"Delete All\">\n                <IconButton onClick={onDeleteAll}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.entries(positions).map(([imageID, position]) => (\n            <TableRow key={imageID} hover>\n              <TableCell>\n                <Switch\n                  value={imageID}\n                  checked={activeImageID === imageID}\n                  onChange={onSwitchChange}\n                />\n              </TableCell>\n              <TableCell align=\"right\">\n                <InputBase\n                  fullWidth\n                  inputProps={{\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    style: { textAlign: 'right' },\n                  }}\n                  name=\"left\"\n                  type=\"number\"\n                  placeholder=\"0.00\"\n                  onChange={(e) => onInputChange(e, imageID)}\n                  value={position.left ?? 0}\n                />\n              </TableCell>\n              <TableCell align=\"right\">\n                <InputBase\n                  fullWidth\n                  inputProps={{\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    style: { textAlign: 'right' },\n                  }}\n                  name=\"top\"\n                  type=\"number\"\n                  placeholder=\"0.00\"\n                  onChange={(e) => onInputChange(e, imageID)}\n                  value={position.top ?? 0}\n                />\n              </TableCell>\n              <TableCell>\n                <Tooltip title=\"Delete\">\n                  <IconButton onClick={(e) => onDelete(e, imageID)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\ninterface DeleteAllDialogProps {\n  open: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nconst DeleteAllDialog = ({\n  open,\n  onClose,\n  onConfirm,\n}: DeleteAllDialogProps) => (\n  <Dialog fullWidth onClose={onClose} open={open}>\n    <DialogTitle>Delete All</DialogTitle>\n    <DialogContent dividers>\n      <Typography>Are you sure you want to delete all images?</Typography>\n      <Typography variant=\"caption\" color=\"text.secondary\">\n        *You cannot undo this action\n      </Typography>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={onClose} color=\"primary\">\n        Cancel\n      </Button>\n      <Button onClick={onConfirm} color=\"primary\">\n        Confirm\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\ninterface CopySnackbarProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst CopySnackbar = ({ open, onClose }: CopySnackbarProps) => (\n  <Snackbar\n    autoHideDuration={6000}\n    open={open}\n    onClose={(e, reason) => reason !== 'clickaway' && onClose()}\n  >\n    <Alert onClose={onClose}>Successfully copied to clipboard</Alert>\n  </Snackbar>\n);\n\ninterface ContentSectionProps {\n  title: string;\n}\n\nconst ContentSection = ({\n  children,\n  title,\n}: React.PropsWithChildren<ContentSectionProps>) => (\n  <Box component=\"section\" my={4}>\n    <Typography gutterBottom variant=\"h5\" sx={{ fontWeight: 'bold' }}>\n      {title}\n    </Typography>\n    {children}\n  </Box>\n);\n\nconst Footer = () => (\n  <Box component=\"footer\" textAlign=\"center\" p={2}>\n    <Typography variant=\"caption\" color=\"text.secondary\">\n      v{process.env.REACT_APP_VERSION}\n    </Typography>\n  </Box>\n);\n\nconst ImageCanvasPreviewImg = styled('img')({\n  maxWidth: '100%',\n  cursor: 'crosshair',\n});\n\nconst ImageCanvasWrapper = styled('div')({\n  display: 'flex',\n  position: 'relative',\n});\n\nconst ImageCanvasCaptionWrapper = styled('div')(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  padding: theme.spacing(1),\n}));\n\nconst EmptyImageCanvasRoot = styled('div')(({ theme }) => ({\n  padding: theme.spacing(2),\n  minHeight: 400,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst EmptyImageCanvas = () => (\n  <EmptyImageCanvasRoot>\n    <Box textAlign=\"center\">\n      <ImageOutlinedIcon color=\"action\" fontSize=\"large\" />\n      <Typography gutterBottom color=\"text.secondary\" variant=\"subtitle2\">\n        Select an image from the carousel below to begin\n      </Typography>\n    </Box>\n  </EmptyImageCanvasRoot>\n);\n\ninterface ImageStackProps {\n  activeImageID?: string;\n  images: Image[];\n  inputProps: React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  >;\n  onChange: (imageID: string) => void;\n}\n\nconst ImageStack = ({\n  activeImageID,\n  images,\n  inputProps,\n  onChange,\n}: ImageStackProps) => {\n  const isTabletBelow = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down('md')\n  );\n\n  return (\n    <Stack spacing={2} direction=\"row\" sx={{ p: 2, overflow: 'auto' }}>\n      {images.map((image) => (\n        <Card\n          variant=\"outlined\"\n          key={image.id}\n          title={image.file.name}\n          sx={{\n            flex: `0 0 ${isTabletBelow ? 33.34 : 16.67}%`,\n            ...(activeImageID === image.id && {\n              border: (theme) => `1px solid ${theme.palette.primary.main}`,\n            }),\n          }}\n        >\n          <CardActionArea onClick={() => onChange(image.id)}>\n            <CardMedia\n              component=\"img\"\n              image={image.imgSrc}\n              alt={image.file.name}\n            />\n            <CardContent\n              sx={{\n                textAlign: 'center',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n              }}\n            >\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {image.file.name}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      ))}\n      <Card\n        variant=\"outlined\"\n        title=\"Add\"\n        sx={{ flex: `0 0 ${isTabletBelow ? 33.34 : 16.67}%` }}\n      >\n        <CardActionArea\n          component=\"label\"\n          sx={{ display: 'flex', alignItems: 'center', height: '100%' }}\n        >\n          <input type=\"file\" hidden {...inputProps} />\n          <AddIcon fontSize=\"large\" color=\"action\" />\n        </CardActionArea>\n      </Card>\n    </Stack>\n  );\n};\n\nconst CodeDialogPre = styled('pre')(({ theme }) => ({\n  fontSize: theme.typography.pxToRem(10),\n  margin: 0,\n  padding: theme.spacing(2),\n}));\n\nfunction App() {\n  const [images, setImages] = useState<Image[]>([]);\n  const [positions, setPositions] = useState<Positions>({});\n  const [activeImageID, setActiveImageID] = useState<string | undefined>();\n\n  const [open, setOpen] = useState({\n    codeDialog: false,\n    copySnackbar: false,\n    deleteDialog: false,\n  });\n\n  const updateOpen = (name: keyof typeof open, newOpen: boolean) =>\n    setOpen((prevOpen) => ({ ...prevOpen, [name]: newOpen }));\n\n  useBeforeunload((e) => {\n    if (images.length) {\n      e.preventDefault();\n    }\n  });\n\n  const onImagesUpload = useCallback((acceptedFiles: File[]) => {\n    const images = acceptedFiles.map((file) => ({\n      id: uuidv4(),\n      file,\n      imgSrc: URL.createObjectURL(file),\n    }));\n    setImages((prevImages) => [...prevImages, ...images]);\n\n    // Default to first image.\n    setActiveImageID(images[0]?.id);\n\n    const positions = images.reduce(\n      (res, image) => ({\n        ...res,\n        [image.id]: { left: undefined, top: undefined },\n      }),\n      {}\n    );\n    setPositions((prevPositions) => ({ ...prevPositions, ...positions }));\n  }, []);\n\n  const {\n    open: openUpload,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: onImagesUpload,\n    noClick: true,\n  });\n\n  const handlePlotHotspot = (\n    e: React.MouseEvent<HTMLImageElement>,\n    image: Image\n  ) => {\n    const rect = (e.target as HTMLElement).getBoundingClientRect();\n    const x = e.clientX - HOTSPOT_SIZE - rect.left;\n    const y = e.clientY - HOTSPOT_SIZE - rect.top;\n    const left = +((x / rect.width) * 100).toFixed(2);\n    const top = +((y / rect.height) * 100).toFixed(2);\n    setPositions((prevPositions) => ({\n      ...prevPositions,\n      [image.id]: { left, top },\n    }));\n  };\n\n  const handleInputChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    imageID: string\n  ) => {\n    setPositions((prevPositions) => ({\n      ...prevPositions,\n      [imageID]: {\n        ...prevPositions[imageID],\n        [e.target.name]: Number(e.target.value),\n      },\n    }));\n  };\n\n  const handlePreviousImage = () => {\n    const currentImgIndex = images.findIndex(\n      (image) => activeImageID === image.id\n    );\n    if (currentImgIndex > -1 && currentImgIndex > 0) {\n      setActiveImageID(images[currentImgIndex - 1].id);\n    }\n  };\n\n  const handleNextImage = () => {\n    const currentImgIndex = images.findIndex(\n      (image) => activeImageID === image.id\n    );\n    if (currentImgIndex > -1 && currentImgIndex < images.length - 1) {\n      setActiveImageID(images[currentImgIndex + 1].id);\n    }\n  };\n\n  const handleDeleteImage = (imageID: string) => {\n    if (imageID === activeImageID) {\n      setActiveImageID(undefined);\n    }\n    setImages((prevImages) => {\n      const newImages = [...prevImages];\n      const idx = newImages.findIndex((i) => i.id === imageID);\n      if (idx > -1) {\n        newImages.splice(idx, 1);\n      }\n      return newImages;\n    });\n    setPositions((prevPositions) => {\n      const newPositions = { ...prevPositions };\n      delete newPositions[imageID];\n      return newPositions;\n    });\n  };\n\n  const isPositionSet = (imageID: string) =>\n    positions[imageID] && positions[imageID].left && positions[imageID].top;\n\n  const renderCodeDialog = () => (\n    <Dialog\n      scroll=\"paper\"\n      fullWidth\n      onClose={() => updateOpen('codeDialog', false)}\n      open={open.codeDialog}\n    >\n      <DialogTitle>JSON</DialogTitle>\n      <DialogContent sx={{ p: 0 }}>\n        <Highlight\n          {...defaultProps}\n          code={JSON.stringify(Object.values(positions), null, 2)}\n          language=\"json\"\n        >\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\n            <CodeDialogPre className={className} style={style}>\n              {tokens.map((line, i) => (\n                <div {...getLineProps({ line, key: i })}>\n                  {line.map((token, key) => (\n                    <span {...getTokenProps({ token, key })} />\n                  ))}\n                </div>\n              ))}\n            </CodeDialogPre>\n          )}\n        </Highlight>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            window.navigator.clipboard.writeText(\n              JSON.stringify(Object.values(positions), null, 2)\n            );\n            updateOpen('copySnackbar', true);\n          }}\n          color=\"primary\"\n        >\n          Copy\n        </Button>\n        <Button onClick={() => updateOpen('codeDialog', false)} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  const renderImageCanvas = (image: Image) => (\n    <>\n      <ImageCanvasWrapper>\n        <ImageCanvasPreviewImg\n          alt={image.file.name}\n          onMouseDown={(e) => handlePlotHotspot(e, image)}\n          src={image.imgSrc}\n        />\n        {isPositionSet(image.id) && (\n          <Tooltip title={JSON.stringify(positions[image.id])}>\n            <Hotspot\n              size={HOTSPOT_SIZE}\n              left={positions[image.id].left}\n              top={positions[image.id].top}\n            />\n          </Tooltip>\n        )}\n      </ImageCanvasWrapper>\n      <Divider />\n      <ImageCanvasCaptionWrapper>\n        <Tooltip title=\"Previous\">\n          <span>\n            <IconButton disabled={isFirstImage} onClick={handlePreviousImage}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mx: 2 }}>\n          {image.file.name}\n        </Typography>\n        <Tooltip title=\"Next\">\n          <span>\n            <IconButton disabled={isLastImage} onClick={handleNextImage}>\n              <ChevronRightIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </ImageCanvasCaptionWrapper>\n    </>\n  );\n\n  const isFirstImage =\n    images.findIndex((image) => image.id === activeImageID) === 0;\n\n  const isLastImage =\n    images.findIndex((image) => image.id === activeImageID) ===\n    images.length - 1;\n\n  const activeImage = images.find((image) => image.id === activeImageID);\n\n  return (\n    <main>\n      <ColorThemeProvider>\n        <CssBaseline enableColorScheme />\n        <AppBar />\n        <Toolbar />\n        <DeleteAllDialog\n          open={open.deleteDialog}\n          onClose={() => updateOpen('deleteDialog', false)}\n          onConfirm={() => {\n            updateOpen('deleteDialog', false);\n            setImages([]);\n            setPositions({});\n          }}\n        />\n        {renderCodeDialog()}\n        <CopySnackbar\n          open={open.copySnackbar}\n          onClose={() => updateOpen('copySnackbar', false)}\n        />\n        <Container>\n          <Paper variant=\"outlined\" sx={{ my: 4 }}>\n            {!images.length ? (\n              <ImageDropzoneUploader\n                {...getRootProps()}\n                active={isDragActive}\n                inputProps={getInputProps()}\n                onOpen={openUpload}\n              />\n            ) : (\n              <Grid container>\n                <Grid item xs={12} md={8}>\n                  {activeImage ? (\n                    renderImageCanvas(activeImage)\n                  ) : (\n                    <EmptyImageCanvas />\n                  )}\n                  <Divider />\n                  <ImageStack\n                    activeImageID={activeImageID}\n                    images={images}\n                    inputProps={getInputProps()}\n                    onChange={(imageID) => setActiveImageID(imageID)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <PositionTable\n                    activeImageID={activeImageID}\n                    positions={positions}\n                    onCodeOpen={() => updateOpen('codeDialog', true)}\n                    onDeleteAll={() => updateOpen('deleteDialog', true)}\n                    onSwitchChange={(e) => setActiveImageID(e.target.value)}\n                    onInputChange={handleInputChange}\n                    onDelete={(e, imageID) => handleDeleteImage(imageID)}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Paper>\n          <ContentSection title=\"About\">\n            <Typography variant=\"subtitle1\">\n              This little tool is built to ease the process of marking\n              \"hotspot(s)\" for an image sequence. E.g, a hotspot that changes\n              its position based on the current frame of the image sequence. The\n              computed values are nothing more than plain parent relative with\n              children absolute positioning in percentage (%). The position\n              array is mapped based on the sequence of the images.\n            </Typography>\n          </ContentSection>\n          <ContentSection title=\"License\">\n            <Link\n              href={`${process.env.REACT_APP_GITHUB_REPOSITORY_URL}/LICENSE.txt`}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              MIT\n            </Link>\n          </ContentSection>\n          <Divider />\n          <Footer />\n        </Container>\n      </ColorThemeProvider>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}